use std::{path::{PathBuf, Path}, fs};

use expanduser;
use crate::theme::Theme;


pub fn ensure_config(path: PathBuf){
    let hypr_config = expanduser::expanduser("~/.config/hypr/hyprland.conf").unwrap();

    let conf = fs::read_to_string(&hypr_config).expect("Unable to read hyprland config file");

    let dist_path = expanduser::expanduser("~/.config/hypr/themes/__dist/__dist.conf").unwrap();

    if !dist_path.exists(){
        println!("Creating {}",dist_path.display());
        fs::create_dir_all(dist_path.parent().unwrap()).expect("Unable to create directory");
        fs::write(dist_path, "").expect("Unable to write to file");
    }

    let autogen = format!("
#====== autogenerated by hyprtheme ======#
source = ~/.config/hypr/themes/__dist/{}
",path.display());

    if !conf.contains(&autogen){
        println!("Adding autogen to {}",hypr_config.display());
        fs::write(hypr_config, conf + autogen.as_str()).expect("Unable to write to file");
    }


}

pub fn apply(theme:Theme){
    
}
